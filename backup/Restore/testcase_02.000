//-------------------------------------------------------------------------------------------------
//  -- 版权所有者   : 中国大恒（集团）有限公司北京图像视觉技术分公司, 2010 -2015.
//  -- 保密级别     ：绝密.
//  -- 部门         : 硬件部，FPGA工作组
//  -- 模块名       : testcase_02
//  -- 设计者       : 邢海涛
//-------------------------------------------------------------------------------------------------
//
//  -- 版本记录 :
//
//  -- 作者         :| 修改日期				:|  修改说明
//-------------------------------------------------------------------------------------------------
//  -- 邢海涛       :| 2015/4/10 16:50:28	:|  初始版本
//-------------------------------------------------------------------------------------------------
//
//  -- 模块描述     : 窗口大小是16x16，开采信号有效，正常模式下的运行状况
//              1)  : ... ...
//
//              2)  : ... ...
//
//              3)  : ... ...
//
//-------------------------------------------------------------------------------------------------
//仿真单位/精度
`timescale 1ns/1ps
//-------------------------------------------------------------------------------------------------

module testcase_02 ();

	//	ref signals
	//	===============================================================================================
	//	--ref parameter
	//	===============================================================================================
	//	-------------------------------------------------------------------------------------
	//	TESTCASE
	//	-------------------------------------------------------------------------------------
	parameter	TESTCASE_NUM			= "testcase_02"			;	//其他模块需要使用字符串

	//	-------------------------------------------------------------------------------------
	//	clk_gen
	//	-------------------------------------------------------------------------------------
	parameter	CLK_PERIOD_NS_0			= 20	;	//i2c 时钟频率，50MHz
	parameter	CLK_PERIOD_NS_1			= 100	;	//RESERVED
	parameter	CLK_PERIOD_NS_2			= 100	;	//RESERVED
	parameter	CLK_PERIOD_NS_3			= 100	;	//RESERVED
	parameter	CLK_PERIOD_NS_4			= 100	;	//RESERVED
	parameter	CLK_PERIOD_NS_5			= 100	;	//RESERVED
	parameter	CLK_PERIOD_NS_6			= 100	;	//RESERVED
	parameter	CLK_PERIOD_NS_7			= 100	;	//RESERVED

	integer			i = 0;


	reg		[7:0]			i2csr1				= 'b0;
	reg		[7:0]			i2csr2				= 'b0;

	wire					hgc					;
	wire					troe				;
	wire					trrdy				;
	wire					arbl				;
	wire					srw					;
	wire					rarc				;
	wire					busy				;
	wire					tip					;

	wire					hgc2				;
	wire					troe2				;
	wire					trrdy2				;
	wire					arbl2				;
	wire					srw2				;
	wire					rarc2				;
	wire					busy2				;
	wire					tip2				;


	//	ref ARCHITECTURE


	//	-------------------------------------------------------------------------------------
	//	--ref sim time
	//	-------------------------------------------------------------------------------------
	assign	hgc			= i2csr1[0];
	assign	troe		= i2csr1[1];
	assign	trrdy		= i2csr1[2];
	assign	arbl		= i2csr1[3];
	assign	srw			= i2csr1[4];
	assign	rarc		= i2csr1[5];
	assign	busy		= i2csr1[6];
	assign	tip			= i2csr1[7];

	assign	hgc2		= i2csr2[0];
	assign	troe2		= i2csr2[1];
	assign	trrdy2		= i2csr2[2];
	assign	arbl2		= i2csr2[3];
	assign	srw2		= i2csr2[4];
	assign	rarc2		= i2csr2[5];
	assign	busy2		= i2csr2[6];
	assign	tip2		= i2csr2[7];



	initial begin

		#1000
		//	-------------------------------------------------------------------------------------
		//	写入 slave addr 和 start
		//	-------------------------------------------------------------------------------------
		driver.driver_i2c_inst1.bfm_i2c.write_cmd(4'h8,8'h84,1'b0);
		driver.driver_i2c_inst1.bfm_i2c.write_cmd(4'h7,8'h94,1'b0);

		//	-------------------------------------------------------------------------------------
		//	查看 trrdy 是否=1
		//	-------------------------------------------------------------------------------------
		driver.driver_i2c_inst1.bfm_i2c.read_cmd(4'hb,1'b0);
		i2csr1	= driver.driver_i2c_inst1.i2c1dato;
		while(trrdy==1'b0) begin
			driver.driver_i2c_inst1.bfm_i2c.read_cmd(4'hb,1'b0);
			i2csr1	= driver.driver_i2c_inst1.i2c1dato;
		end

		//	-------------------------------------------------------------------------------------
		//	写入 reg addr high 0x12
		//	-------------------------------------------------------------------------------------
		driver.driver_i2c_inst1.bfm_i2c.write_cmd(4'h8,8'h12,1'b0);
		driver.driver_i2c_inst1.bfm_i2c.write_cmd(4'h7,8'h14,1'b0);

		//	-------------------------------------------------------------------------------------
		//	查看 trrdy 是否=1
		//	-------------------------------------------------------------------------------------
		driver.driver_i2c_inst1.bfm_i2c.read_cmd(4'hb,1'b0);
		i2csr1	= driver.driver_i2c_inst1.i2c1dato;
		while(trrdy==1'b0) begin
			driver.driver_i2c_inst1.bfm_i2c.read_cmd(4'hb,1'b0);
			i2csr1	= driver.driver_i2c_inst1.i2c1dato;
		end

		//	-------------------------------------------------------------------------------------
		//	写入 reg addr high 0x34
		//	-------------------------------------------------------------------------------------
		driver.driver_i2c_inst1.bfm_i2c.write_cmd(4'h8,8'h34,1'b0);
		driver.driver_i2c_inst1.bfm_i2c.write_cmd(4'h7,8'h14,1'b0);

		//	-------------------------------------------------------------------------------------
		//	查看 trrdy 是否=1
		//	-------------------------------------------------------------------------------------
		driver.driver_i2c_inst1.bfm_i2c.read_cmd(4'hb,1'b0);
		i2csr1	= driver.driver_i2c_inst1.i2c1dato;
		while(trrdy==1'b0) begin
			driver.driver_i2c_inst1.bfm_i2c.read_cmd(4'hb,1'b0);
			i2csr1	= driver.driver_i2c_inst1.i2c1dato;
		end

		//	-------------------------------------------------------------------------------------
		//	写入 slave addr 和 start
		//	-------------------------------------------------------------------------------------
		driver.driver_i2c_inst1.bfm_i2c.write_cmd(4'h8,8'h85,1'b0);
		driver.driver_i2c_inst1.bfm_i2c.write_cmd(4'h7,8'h94,1'b0);

		//	-------------------------------------------------------------------------------------
		//	查看 srw 是否=1
		//	-------------------------------------------------------------------------------------
		driver.driver_i2c_inst1.bfm_i2c.read_cmd(4'hb,1'b0);
		i2csr1	= driver.driver_i2c_inst1.i2c1dato;
		while(srw==1'b0) begin
			driver.driver_i2c_inst1.bfm_i2c.read_cmd(4'hb,1'b0);
			i2csr1	= driver.driver_i2c_inst1.i2c1dato;
		end

		//	-------------------------------------------------------------------------------------
		//	发出读数据命令
		//	-------------------------------------------------------------------------------------
		driver.driver_i2c_inst1.bfm_i2c.write_cmd(4'h7,8'h24,1'b0);

		//	-------------------------------------------------------------------------------------
		//	查看 trrdy 是否=1
		//	-------------------------------------------------------------------------------------
		driver.driver_i2c_inst1.bfm_i2c.read_cmd(4'hb,1'b0);
		i2csr1	= driver.driver_i2c_inst1.i2c1dato;
		while(trrdy==1'b0) begin
			driver.driver_i2c_inst1.bfm_i2c.read_cmd(4'hb,1'b0);
			i2csr1	= driver.driver_i2c_inst1.i2c1dato;
		end

		//	-------------------------------------------------------------------------------------
		//	读 RX
		//	-------------------------------------------------------------------------------------
		driver.driver_i2c_inst1.bfm_i2c.read_cmd(4'h9,1'b0);
		$display("%m: at time %t : i2c master read data is 0x%x", $time, driver.driver_i2c_inst1.i2c1dato);


		//	-------------------------------------------------------------------------------------
		//	wait
		//	-------------------------------------------------------------------------------------
		# 1000


		//	-------------------------------------------------------------------------------------
		//	发出命令 RD NACK STOP
		//	-------------------------------------------------------------------------------------
		driver.driver_i2c_inst1.bfm_i2c.write_cmd(4'h7,8'h6c,1'b0);

		//	-------------------------------------------------------------------------------------
		//	查看 trrdy 是否=1
		//	-------------------------------------------------------------------------------------
		driver.driver_i2c_inst1.bfm_i2c.read_cmd(4'hb,1'b0);
		i2csr1	= driver.driver_i2c_inst1.i2c1dato;
		while(trrdy==1'b0) begin
			driver.driver_i2c_inst1.bfm_i2c.read_cmd(4'hb,1'b0);
			i2csr1	= driver.driver_i2c_inst1.i2c1dato;
		end

		//	-------------------------------------------------------------------------------------
		//	读 RX
		//	-------------------------------------------------------------------------------------
		driver.driver_i2c_inst1.bfm_i2c.read_cmd(4'h9,1'b0);
		$display("%m: at time %t : i2c master read data is 0x%x", $time, driver.driver_i2c_inst1.i2c1dato);


		#1000000
		$stop;

	end

	initial begin

		#1000

		forever begin
			//	-------------------------------------------------------------------------------------
			//	写入 CKSDIS IRQEN
			//	-------------------------------------------------------------------------------------
			driver.driver_i2c_inst2.bfm_i2c.write_cmd(4'h7,8'h04,1'b0);

			//	-------------------------------------------------------------------------------------
			//	查看 busy2 是否=0
			//	-------------------------------------------------------------------------------------
			driver.driver_i2c_inst2.bfm_i2c.read_cmd(4'hb,1'b0);
			i2csr2	= driver.driver_i2c_inst2.i2c1dato;
			while(busy2==1'b1) begin
				driver.driver_i2c_inst2.bfm_i2c.read_cmd(4'hb,1'b0);
				i2csr2	= driver.driver_i2c_inst2.i2c1dato;
			end

			//	-------------------------------------------------------------------------------------
			//	读 RX
			//	-------------------------------------------------------------------------------------
			driver.driver_i2c_inst2.bfm_i2c.read_cmd(4'h9,1'b0);
			$display("%m: at time %t : i2c slave read data is 0x%x", $time, driver.driver_i2c_inst2.i2c1dato);
			driver.driver_i2c_inst2.bfm_i2c.read_cmd(4'h9,1'b0);
			$display("%m: at time %t : i2c slave read data is 0x%x", $time, driver.driver_i2c_inst2.i2c1dato);


			//	-------------------------------------------------------------------------------------
			//	读 2 byte 寄存器地址
			//	-------------------------------------------------------------------------------------
			for(i=0;i<2;i=i+1) begin
				//	-------------------------------------------------------------------------------------
				//	查看 trrdy 是否=1
				//	-------------------------------------------------------------------------------------
				driver.driver_i2c_inst2.bfm_i2c.read_cmd(4'hb,1'b0);
				i2csr2	= driver.driver_i2c_inst2.i2c1dato;
				while(trrdy2==1'b0) begin
					driver.driver_i2c_inst2.bfm_i2c.read_cmd(4'hb,1'b0);
					i2csr2	= driver.driver_i2c_inst2.i2c1dato;
				end

				//	-------------------------------------------------------------------------------------
				//	读 RX
				//	-------------------------------------------------------------------------------------
				driver.driver_i2c_inst2.bfm_i2c.read_cmd(4'h9,1'b0);
				$display("%m: at time %t : i2c slave read data is 0x%x", $time, driver.driver_i2c_inst2.i2c1dato);

			end

			//	-------------------------------------------------------------------------------------
			//	查看 srw 是否=1
			//	-------------------------------------------------------------------------------------
			driver.driver_i2c_inst2.bfm_i2c.read_cmd(4'hb,1'b0);
			i2csr2	= driver.driver_i2c_inst2.i2c1dato;
			while(srw2==1'b0) begin
				driver.driver_i2c_inst2.bfm_i2c.read_cmd(4'hb,1'b0);
				i2csr2	= driver.driver_i2c_inst2.i2c1dato;
			end

			//	-------------------------------------------------------------------------------------
			//	写入 reply data high
			//	-------------------------------------------------------------------------------------
			driver.driver_i2c_inst2.bfm_i2c.write_cmd(4'h8,8'h13,1'b0);

			//	-------------------------------------------------------------------------------------
			//	查看 trrdy 是否=1
			//	-------------------------------------------------------------------------------------
			driver.driver_i2c_inst2.bfm_i2c.read_cmd(4'hb,1'b0);
			i2csr2	= driver.driver_i2c_inst2.i2c1dato;
			while(trrdy2==1'b0) begin
				driver.driver_i2c_inst2.bfm_i2c.read_cmd(4'hb,1'b0);
				i2csr2	= driver.driver_i2c_inst2.i2c1dato;
			end

			//	-------------------------------------------------------------------------------------
			//	写入 reply data low
			//	-------------------------------------------------------------------------------------
			driver.driver_i2c_inst2.bfm_i2c.write_cmd(4'h8,8'h57,1'b0);

		end

	end





endmodule
